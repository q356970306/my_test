# coding=utf-8

"""
Author： jinshuai_qiao
Date： 2019/11/28
Desc：RSA加解密
"""
import base64

import rsa

# with open("public_key.pem", 'r') as f:
#     pubkey = f.read()
# with open("private_key.pem", 'r') as f:
#     prikey = f.read()
from rsa import key

privateKey = "MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCrnxrOK+PyvXp8fyskLExVKK+4F/oTguDabKuEBVYXhrCUiZQurdrrEAz4bQmG8j0BR9q1+LtDCdPxdk5oI/ZpLKoHnJga14GuTjfPNcT6ZJGHZfcsArO8WyOgdtVKcuBp7NJFzg3fJw4kmC6sWiuzFcpoNbK4Rgok098dFsqxq46bRHMFVZFYT+NA9Iadmrgxf90FrCBLTyzGM1Z/7MVUTN546rA8baGpExbVO8KIVuhk/FJKQNVWoCeSO4HTq1/Y6tcqWlhjHLTtyxEfKZlVPQYdmV9qFrXVcVaTaHsQNP4s1TMyKjphMzaPdplG/jydBK7gQ6oIDUTQep9ImkCTAgMBAAECggEAV+DSgvuqbyNi0tjzKESemYSJ5cQxQ0hjBrVaZfGtkcJgLM7916EiVfcUDSkYFcd4QW2fqkpA6SThJ+UiZOT1Sgmazub6Y9QyDST0IuAvit9wPVqS5DBGBI7OgV4X/VUxYEvpp+DI7Zk7/rUGQS6y7bKcwBuu9fi3PQBYYLbI94xAefjMvGilDvOLPYi060Cj9smWkUQ8WHPvfTeDeABWxuXiCDKoO5N5EofaV1H2+LWJCu/D6/ueQgU71kx33JVmwUY9rKEzCxwhUN5wu4SZA5oTgzjXyuGD0rk0JQNQEjJAFWESiZrtIupFyGrTB6mz1ngy7omDVietsISirAjXsQKBgQDVTuKfrNu7jhf7+Pvy7cx9DtUYSpfKdwb8eElGRZpRYLGR9swPPNxEdDkflVCmTxWpPhFIxt/wC+aVSyhsJHbNRLVMg3cUiQ60KtO26hnBlU0saQLaJM1pC0dkD9wSs/zqjmK0OlZYTYZq/zCXBN6rgunSx1GLPnfsja7ziPRnrwKBgQDN+Fnm1cXCQ4nsrIgJXZaMXnK0DFU+Ae3lsCHebqAHmdvj/v6KL+O3orn66u8DjDRHrVusnT4vDDxD74bPIJJdCVDInrAgIeRJYMnIQe3E+17aYdCsVMMrONytq//VydL3Gypv36JGwpZwJxIXyE3z0ITyiP2zkAaN25vgWahKXQKBgDR+NUcWQvzk+wIHQ/mEi8462DYiJTiuEgoPj/i7KD7ejNRe59jYIVy3PVeIZ1CGJc6Ad8BxMKriQtx6onf6gUICppstvyBOmk+8Ol3JPo1lMJi9PvZwGBzBqc/2FzKDGLqgT6oKsTUJ3wp1wn9ns2SB0wkMBAVAWkLcmzFTgtIBAoGBAJnvRqFymz4449fyiikVvPJjlC5kGUEih/3lySpIW2nS37hiVzJH4FTaVUzmUIPCQUBgm+dCDbtz1YageYxLt5e44ptNniwlqEv+/k+glmdlxtpHyIFDSCoBcUyLA8Vv9S+hKfI6nTltLKndSXRky32xFet93r5Yoc1bl//wggoxAoGAUBbCjt7m36C4LFXrjY+cXp11vFlXYc1nNYLhNfbxLsD9vETZTAgll8mMeAfQOq0HT7szTkhby8ykAB003DU7QbG4wMJtE80nDQ85iMK6TZj7nwjYi8jfonfaQGqSlrORdNJzO7L5Ge75oIdtKLWG6hErKO6ms3ybUVYblfL/gmU=",
publicKey = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq58azivj8r16fH8rJCxMVSivuBf6E4Lg2myrhAVWF4awlImULq3a6xAM+G0JhvI9AUfatfi7QwnT8XZOaCP2aSyqB5yYGteBrk43zzXE+mSRh2X3LAKzvFsjoHbVSnLgaezSRc4N3ycOJJgurForsxXKaDWyuEYKJNPfHRbKsauOm0RzBVWRWE/jQPSGnZq4MX/dBawgS08sxjNWf+zFVEzeeOqwPG2hqRMW1TvCiFboZPxSSkDVVqAnkjuB06tf2OrXKlpYYxy07csRHymZVT0GHZlfaha11XFWk2h7EDT+LNUzMio6YTM2j3aZRv48nQSu4EOqCA1E0HqfSJpAkwIDAQAB"

# prik = """
# -----BEGIN RSA PRIVATE KEY-----
# MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCrnxrOK+PyvXp8fyskLExVKK+4F/oTguDabKuEBVYXhrCUiZQurdrrEAz4bQmG8j0BR9q1+LtDCdPxdk5oI/ZpLKoHnJga14GuTjfPNcT6ZJGHZfcsArO8WyOgdtVKcuBp7NJFzg3fJw4kmC6sWiuzFcpoNbK4Rgok098dFsqxq46bRHMFVZFYT+NA9Iadmrgxf90FrCBLTyzGM1Z/7MVUTN546rA8baGpExbVO8KIVuhk/FJKQNVWoCeSO4HTq1/Y6tcqWlhjHLTtyxEfKZlVPQYdmV9qFrXVcVaTaHsQNP4s1TMyKjphMzaPdplG/jydBK7gQ6oIDUTQep9ImkCTAgMBAAECggEAV+DSgvuqbyNi0tjzKESemYSJ5cQxQ0hjBrVaZfGtkcJgLM7916EiVfcUDSkYFcd4QW2fqkpA6SThJ+UiZOT1Sgmazub6Y9QyDST0IuAvit9wPVqS5DBGBI7OgV4X/VUxYEvpp+DI7Zk7/rUGQS6y7bKcwBuu9fi3PQBYYLbI94xAefjMvGilDvOLPYi060Cj9smWkUQ8WHPvfTeDeABWxuXiCDKoO5N5EofaV1H2+LWJCu/D6/ueQgU71kx33JVmwUY9rKEzCxwhUN5wu4SZA5oTgzjXyuGD0rk0JQNQEjJAFWESiZrtIupFyGrTB6mz1ngy7omDVietsISirAjXsQKBgQDVTuKfrNu7jhf7+Pvy7cx9DtUYSpfKdwb8eElGRZpRYLGR9swPPNxEdDkflVCmTxWpPhFIxt/wC+aVSyhsJHbNRLVMg3cUiQ60KtO26hnBlU0saQLaJM1pC0dkD9wSs/zqjmK0OlZYTYZq/zCXBN6rgunSx1GLPnfsja7ziPRnrwKBgQDN+Fnm1cXCQ4nsrIgJXZaMXnK0DFU+Ae3lsCHebqAHmdvj/v6KL+O3orn66u8DjDRHrVusnT4vDDxD74bPIJJdCVDInrAgIeRJYMnIQe3E+17aYdCsVMMrONytq//VydL3Gypv36JGwpZwJxIXyE3z0ITyiP2zkAaN25vgWahKXQKBgDR+NUcWQvzk+wIHQ/mEi8462DYiJTiuEgoPj/i7KD7ejNRe59jYIVy3PVeIZ1CGJc6Ad8BxMKriQtx6onf6gUICppstvyBOmk+8Ol3JPo1lMJi9PvZwGBzBqc/2FzKDGLqgT6oKsTUJ3wp1wn9ns2SB0wkMBAVAWkLcmzFTgtIBAoGBAJnvRqFymz4449fyiikVvPJjlC5kGUEih/3lySpIW2nS37hiVzJH4FTaVUzmUIPCQUBgm+dCDbtz1YageYxLt5e44ptNniwlqEv+/k+glmdlxtpHyIFDSCoBcUyLA8Vv9S+hKfI6nTltLKndSXRky32xFet93r5Yoc1bl//wggoxAoGAUBbCjt7m36C4LFXrjY+cXp11vFlXYc1nNYLhNfbxLsD9vETZTAgll8mMeAfQOq0HT7szTkhby8ykAB003DU7QbG4wMJtE80nDQ85iMK6TZj7nwjYi8jfonfaQGqSlrORdNJzO7L5Ge75oIdtKLWG6hErKO6ms3ybUVYblfL/gmU=
# -----END RSA PRIVATE KEY-----
# """
# pubk = """
# -----BEGIN PUBLIC KEY-----
# MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq58azivj8r16fH8rJCxMVSivuBf6E4Lg2myrhAVWF4awlImULq3a6xAM+G0JhvI9AUfatfi7QwnT8XZOaCP2aSyqB5yYGteBrk43zzXE+mSRh2X3LAKzvFsjoHbVSnLgaezSRc4N3ycOJJgurForsxXKaDWyuEYKJNPfHRbKsauOm0RzBVWRWE/jQPSGnZq4MX/dBawgS08sxjNWf+zFVEzeeOqwPG2hqRMW1TvCiFboZPxSSkDVVqAnkjuB06tf2OrXKlpYYxy07csRHymZVT0GHZlfaha11XFWk2h7EDT+LNUzMio6YTM2j3aZRv48nQSu4EOqCA1E0HqfSJpAkwIDAQAB
# -----END PUBLIC KEY-----
# """

prik = """
-----BEGIN RSA PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCrnxrOK+PyvXp8fyskLExVKK+4F/oTguDabKuEBVYXhrCUiZQurdrrEAz4bQmG8j0BR9q1+LtDCdPxdk5oI/ZpLKoHnJga14GuTjfPNcT6ZJGHZfcsArO8WyOgdtVKcuBp7NJFzg3fJw4kmC6sWiuzFcpoNbK4Rgok098dFsqxq46bRHMFVZFYT+NA9Iadmrgxf90FrCBLTyzGM1Z/7MVUTN546rA8baGpExbVO8KIVuhk/FJKQNVWoCeSO4HTq1/Y6tcqWlhjHLTtyxEfKZlVPQYdmV9qFrXVcVaTaHsQNP4s1TMyKjphMzaPdplG/jydBK7gQ6oIDUTQep9ImkCTAgMBAAECggEAV+DSgvuqbyNi0tjzKESemYSJ5cQxQ0hjBrVaZfGtkcJgLM7916EiVfcUDSkYFcd4QW2fqkpA6SThJ+UiZOT1Sgmazub6Y9QyDST0IuAvit9wPVqS5DBGBI7OgV4X/VUxYEvpp+DI7Zk7/rUGQS6y7bKcwBuu9fi3PQBYYLbI94xAefjMvGilDvOLPYi060Cj9smWkUQ8WHPvfTeDeABWxuXiCDKoO5N5EofaV1H2+LWJCu/D6/ueQgU71kx33JVmwUY9rKEzCxwhUN5wu4SZA5oTgzjXyuGD0rk0JQNQEjJAFWESiZrtIupFyGrTB6mz1ngy7omDVietsISirAjXsQKBgQDVTuKfrNu7jhf7+Pvy7cx9DtUYSpfKdwb8eElGRZpRYLGR9swPPNxEdDkflVCmTxWpPhFIxt/wC+aVSyhsJHbNRLVMg3cUiQ60KtO26hnBlU0saQLaJM1pC0dkD9wSs/zqjmK0OlZYTYZq/zCXBN6rgunSx1GLPnfsja7ziPRnrwKBgQDN+Fnm1cXCQ4nsrIgJXZaMXnK0DFU+Ae3lsCHebqAHmdvj/v6KL+O3orn66u8DjDRHrVusnT4vDDxD74bPIJJdCVDInrAgIeRJYMnIQe3E+17aYdCsVMMrONytq//VydL3Gypv36JGwpZwJxIXyE3z0ITyiP2zkAaN25vgWahKXQKBgDR+NUcWQvzk+wIHQ/mEi8462DYiJTiuEgoPj/i7KD7ejNRe59jYIVy3PVeIZ1CGJc6Ad8BxMKriQtx6onf6gUICppstvyBOmk+8Ol3JPo1lMJi9PvZwGBzBqc/2FzKDGLqgT6oKsTUJ3wp1wn9ns2SB0wkMBAVAWkLcmzFTgtIBAoGBAJnvRqFymz4449fyiikVvPJjlC5kGUEih/3lySpIW2nS37hiVzJH4FTaVUzmUIPCQUBgm+dCDbtz1YageYxLt5e44ptNniwlqEv+/k+glmdlxtpHyIFDSCoBcUyLA8Vv9S+hKfI6nTltLKndSXRky32xFet93r5Yoc1bl//wggoxAoGAUBbCjt7m36C4LFXrjY+cXp11vFlXYc1nNYLhNfbxLsD9vETZTAgll8mMeAfQOq0HT7szTkhby8ykAB003DU7QbG4wMJtE80nDQ85iMK6TZj7nwjYi8jfonfaQGqSlrORdNJzO7L5Ge75oIdtKLWG6hErKO6ms3ybUVYblfL/gmU=
-----END RSA PRIVATE KEY-----
"""
pubk = """
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq58azivj8r16fH8rJCxMVSivuBf6E4Lg2myrhAVWF4awlImULq3a6xAM+G0JhvI9AUfatfi7QwnT8XZOaCP2aSyqB5yYGteBrk43zzXE+mSRh2X3LAKzvFsjoHbVSnLgaezSRc4N3ycOJJgurForsxXKaDWyuEYKJNPfHRbKsauOm0RzBVWRWE/jQPSGnZq4MX/dBawgS08sxjNWf+zFVEzeeOqwPG2hqRMW1TvCiFboZPxSSkDVVqAnkjuB06tf2OrXKlpYYxy07csRHymZVT0GHZlfaha11XFWk2h7EDT+LNUzMio6YTM2j3aZRv48nQSu4EOqCA1E0HqfSJpAkwIDAQAB
-----END PUBLIC KEY-----
"""

# pub_key = rsa.PublicKey.load_pkcs1_openssl_pem(pubk.encode())  # 将公钥由string格式的字符串转化为一个pem格式的对象
# pub_key = rsa.PublicKey.load_pkcs1_openssl_pem(pubk.encode())
# pubkey = rsa.PublicKey.load_pkcs1(pubk.encode())

# private_Key = rsa.PrivateKey.load_pkcs1(prik.encode())  # 将私钥由string格式的字符串转化为一个pem格式的对象
# private_Key = rsa.PrivateKey.load_pkcs1(prik.encode())  # 将私钥由string格式的字符串转化为一个pem格式的对象
#
# print(private_Key)
# print(private_Key)


# rsa加密

def rsaEncrypt(info):
    # 明文编码格式
    param = info.encode('utf-8')
    # 公钥加密
    en_param = rsa.encrypt(param, pub_key)
    res = base64.b64encode(en_param)
    return res


# rsa解密
# def rsaDecrypt(rsa_info):
#     # 私钥解密
#     or_info = rsa.decrypt(rsa_info, private_Key).decode('utf-8')
#     return or_info

